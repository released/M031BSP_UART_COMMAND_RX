; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\ebi.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\ebi.d --cpu=Cortex-M0 --apcs=interwork --diag_suppress=9931 -I..\..\..\Library\CMSIS\Include -I..\..\..\Library\Device\Nuvoton\M031\Include -I..\..\..\Library\StdDriver\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=526 --omf_browse=.\obj\ebi.crf ..\..\..\Library\StdDriver\src\ebi.c]
                          THUMB

                          AREA ||i.EBI_Close||, CODE, READONLY, ALIGN=2

                  EBI_Close PROC
;;;140      */
;;;141    void EBI_Close(uint32_t u32Bank)
000000  4903              LDR      r1,|L1.16|
;;;142    {
;;;143        volatile uint32_t *pu32EBICTL = (uint32_t *)((uint32_t)&EBI->CTL0 + (u32Bank * 0x10));
000002  0100              LSLS     r0,r0,#4
000004  1840              ADDS     r0,r0,r1
;;;144    
;;;145        *pu32EBICTL &= ~EBI_CTL_EN_Msk;
000006  6801              LDR      r1,[r0,#0]
000008  0849              LSRS     r1,r1,#1
00000a  0049              LSLS     r1,r1,#1
00000c  6001              STR      r1,[r0,#0]
;;;146    }
00000e  4770              BX       lr
;;;147    
                          ENDP

                  |L1.16|
                          DCD      0x40010000

                          AREA ||i.EBI_Open||, CODE, READONLY, ALIGN=2

                  EBI_Open PROC
;;;55       */
;;;56     void EBI_Open(uint32_t u32Bank, uint32_t u32DataWidth, uint32_t u32TimingClass, uint32_t u32BusMode, uint32_t u32CSActiveLevel)
000000  b5f0              PUSH     {r4-r7,lr}
;;;57     {
;;;58         volatile uint32_t *pu32EBICTL  = (uint32_t *)((uint32_t)&EBI->CTL0 + (u32Bank * 0x10));
000002  0104              LSLS     r4,r0,#4
000004  4827              LDR      r0,|L2.164|
;;;59         volatile uint32_t *pu32EBITCTL = (uint32_t *)((uint32_t)&EBI->TCTL0 + (u32Bank * 0x10));
000006  4e27              LDR      r6,|L2.164|
000008  1820              ADDS     r0,r4,r0              ;58
00000a  1d36              ADDS     r6,r6,#4
00000c  19a4              ADDS     r4,r4,r6
;;;60     
;;;61         if(u32DataWidth == EBI_BUSWIDTH_8BIT)
;;;62             *pu32EBICTL &= ~EBI_CTL_DW16_Msk;
00000e  2602              MOVS     r6,#2
000010  2908              CMP      r1,#8                 ;61
000012  9d05              LDR      r5,[sp,#0x14]         ;61
;;;63         else
;;;64             *pu32EBICTL |= EBI_CTL_DW16_Msk;
000014  6801              LDR      r1,[r0,#0]
000016  d010              BEQ      |L2.58|
000018  4331              ORRS     r1,r1,r6
                  |L2.26|
00001a  6001              STR      r1,[r0,#0]
;;;65     
;;;66         *pu32EBICTL |= u32BusMode;
00001c  6801              LDR      r1,[r0,#0]
00001e  4319              ORRS     r1,r1,r3
000020  6001              STR      r1,[r0,#0]
;;;67     
;;;68         switch(u32TimingClass)
;;;69         {
;;;70         case EBI_TIMING_FASTEST:
;;;71             *pu32EBICTL = (*pu32EBICTL & ~(EBI_CTL_MCLKDIV_Msk | EBI_CTL_TALE_Msk)) |
000022  00a9              LSLS     r1,r5,#2
000024  2700              MOVS     r7,#0                 ;66
000026  4e20              LDR      r6,|L2.168|
;;;72                           (EBI_MCLKDIV_1 << EBI_CTL_MCLKDIV_Pos) |
;;;73                           (u32CSActiveLevel << EBI_CTL_CSPOLINV_Pos) | EBI_CTL_EN_Msk;
;;;74             *pu32EBITCTL = 0x0;
;;;75             break;
;;;76     
;;;77         case EBI_TIMING_VERYFAST:
;;;78             *pu32EBICTL = (*pu32EBICTL & ~(EBI_CTL_MCLKDIV_Msk | EBI_CTL_TALE_Msk)) |
;;;79                           (EBI_MCLKDIV_4 << EBI_CTL_MCLKDIV_Pos) |
;;;80                           (u32CSActiveLevel << EBI_CTL_CSPOLINV_Pos) | EBI_CTL_EN_Msk |
;;;81                           (0x3 << EBI_CTL_TALE_Pos) ;
;;;82             *pu32EBITCTL = 0x0;
;;;83             break;
;;;84     
;;;85         case EBI_TIMING_FAST:
;;;86             *pu32EBICTL = (*pu32EBICTL & ~(EBI_CTL_MCLKDIV_Msk | EBI_CTL_TALE_Msk)) |
;;;87                           (EBI_MCLKDIV_2 << EBI_CTL_MCLKDIV_Pos) |
;;;88                           (u32CSActiveLevel << EBI_CTL_CSPOLINV_Pos) | EBI_CTL_EN_Msk;
;;;89             *pu32EBITCTL = 0x0;
;;;90             break;
;;;91     
;;;92         case EBI_TIMING_NORMAL:
;;;93             *pu32EBICTL = (*pu32EBICTL & ~(EBI_CTL_MCLKDIV_Msk | EBI_CTL_TALE_Msk)) |
;;;94                           (EBI_MCLKDIV_2 << EBI_CTL_MCLKDIV_Pos) |
;;;95                           (u32CSActiveLevel << EBI_CTL_CSPOLINV_Pos) | EBI_CTL_EN_Msk |
;;;96                           (0x3 << EBI_CTL_TALE_Pos) ;
;;;97             *pu32EBITCTL = 0x03003318;
;;;98             break;
;;;99     
;;;100        case EBI_TIMING_SLOW:
;;;101            *pu32EBICTL = (*pu32EBICTL & ~(EBI_CTL_MCLKDIV_Msk | EBI_CTL_TALE_Msk)) |
;;;102                          (EBI_MCLKDIV_2 << EBI_CTL_MCLKDIV_Pos) |
;;;103                          (u32CSActiveLevel << EBI_CTL_CSPOLINV_Pos) | EBI_CTL_EN_Msk |
;;;104                          (0x7 << EBI_CTL_TALE_Pos) ;
;;;105            *pu32EBITCTL = 0x07007738;
000028  4d20              LDR      r5,|L2.172|
00002a  0013              MOVS     r3,r2                 ;68
00002c  f7fffffe          BL       __ARM_common_switch8
000030  07070c11          DCB      0x07,0x07,0x0c,0x11
000034  1a23282d          DCB      0x1a,0x23,0x28,0x2d
000038  3500              DCB      0x35,0x00
                  |L2.58|
00003a  43b1              BICS     r1,r1,r6              ;62
00003c  e7ed              B        |L2.26|
00003e  6802              LDR      r2,[r0,#0]            ;71
000040  4032              ANDS     r2,r2,r6              ;71
000042  430a              ORRS     r2,r2,r1              ;71
000044  2101              MOVS     r1,#1                 ;71
000046  e009              B        |L2.92|
000048  6802              LDR      r2,[r0,#0]            ;78
00004a  4032              ANDS     r2,r2,r6              ;78
00004c  430a              ORRS     r2,r2,r1              ;78
00004e  4918              LDR      r1,|L2.176|
000050  e004              B        |L2.92|
000052  6802              LDR      r2,[r0,#0]            ;86
000054  4032              ANDS     r2,r2,r6              ;86
000056  430a              ORRS     r2,r2,r1              ;86
000058  21ff              MOVS     r1,#0xff              ;86
00005a  3102              ADDS     r1,#2                 ;86
                  |L2.92|
00005c  430a              ORRS     r2,r2,r1              ;86
00005e  6002              STR      r2,[r0,#0]            ;86
000060  6027              STR      r7,[r4,#0]            ;89
;;;106            break;
;;;107    
;;;108        case EBI_TIMING_VERYSLOW:
;;;109            *pu32EBICTL = (*pu32EBICTL & ~(EBI_CTL_MCLKDIV_Msk | EBI_CTL_TALE_Msk)) |
;;;110                          (EBI_MCLKDIV_4 << EBI_CTL_MCLKDIV_Pos) |
;;;111                          (u32CSActiveLevel << EBI_CTL_CSPOLINV_Pos) | EBI_CTL_EN_Msk |
;;;112                          (0x7 << EBI_CTL_TALE_Pos) ;
;;;113            *pu32EBITCTL = 0x07007738;
;;;114            break;
;;;115    
;;;116        case EBI_TIMING_SLOWEST:
;;;117            *pu32EBICTL = (*pu32EBICTL & ~(EBI_CTL_MCLKDIV_Msk | EBI_CTL_TALE_Msk)) |
;;;118                          (EBI_MCLKDIV_8 << EBI_CTL_MCLKDIV_Pos) |
;;;119                          (u32CSActiveLevel << EBI_CTL_CSPOLINV_Pos) | EBI_CTL_EN_Msk |
;;;120                          (0x7 << EBI_CTL_TALE_Pos) ;
;;;121            *pu32EBITCTL = 0x07007738;
;;;122            break;
;;;123    
;;;124        default:
;;;125            *pu32EBICTL &= ~EBI_CTL_EN_Msk;
;;;126            break;
;;;127        }
;;;128    }
000062  bdf0              POP      {r4-r7,pc}
000064  6802              LDR      r2,[r0,#0]            ;93
000066  4032              ANDS     r2,r2,r6              ;93
000068  430a              ORRS     r2,r2,r1              ;93
00006a  4912              LDR      r1,|L2.180|
00006c  430a              ORRS     r2,r2,r1              ;93
00006e  6002              STR      r2,[r0,#0]            ;93
000070  4811              LDR      r0,|L2.184|
000072  6020              STR      r0,[r4,#0]            ;97
000074  bdf0              POP      {r4-r7,pc}
000076  6802              LDR      r2,[r0,#0]            ;101
000078  4032              ANDS     r2,r2,r6              ;101
00007a  430a              ORRS     r2,r2,r1              ;101
00007c  490f              LDR      r1,|L2.188|
00007e  e008              B        |L2.146|
000080  6802              LDR      r2,[r0,#0]            ;109
000082  4032              ANDS     r2,r2,r6              ;109
000084  430a              ORRS     r2,r2,r1              ;109
000086  490e              LDR      r1,|L2.192|
000088  e003              B        |L2.146|
00008a  6802              LDR      r2,[r0,#0]            ;117
00008c  4032              ANDS     r2,r2,r6              ;117
00008e  430a              ORRS     r2,r2,r1              ;117
000090  490c              LDR      r1,|L2.196|
                  |L2.146|
000092  430a              ORRS     r2,r2,r1              ;117
000094  6002              STR      r2,[r0,#0]            ;117
000096  6025              STR      r5,[r4,#0]            ;121
000098  bdf0              POP      {r4-r7,pc}
00009a  6801              LDR      r1,[r0,#0]            ;125
00009c  0849              LSRS     r1,r1,#1              ;125
00009e  0049              LSLS     r1,r1,#1              ;125
0000a0  6001              STR      r1,[r0,#0]            ;125
0000a2  bdf0              POP      {r4-r7,pc}
;;;129    
                          ENDP

                  |L2.164|
                          DCD      0x40010000
                  |L2.168|
                          DCD      0xfff8f8ff
                  |L2.172|
                          DCD      0x07007738
                  |L2.176|
                          DCD      0x00030201
                  |L2.180|
                          DCD      0x00030101
                  |L2.184|
                          DCD      0x03003318
                  |L2.188|
                          DCD      0x00070101
                  |L2.192|
                          DCD      0x00070201
                  |L2.196|
                          DCD      0x00070301

                          AREA ||i.EBI_SetBusTiming||, CODE, READONLY, ALIGN=2

                  EBI_SetBusTiming PROC
;;;166      */
;;;167    void EBI_SetBusTiming(uint32_t u32Bank, uint32_t u32TimingConfig, uint32_t u32MclkDiv)
000000  b530              PUSH     {r4,r5,lr}
;;;168    {
;;;169        volatile uint32_t *pu32EBICTL  = (uint32_t *)((uint32_t)&EBI->CTL0 + (u32Bank * 0x10));
000002  0103              LSLS     r3,r0,#4
000004  4806              LDR      r0,|L3.32|
;;;170        volatile uint32_t *pu32EBITCTL = (uint32_t *)((uint32_t)&EBI->TCTL0 + (u32Bank * 0x10));
000006  4c06              LDR      r4,|L3.32|
000008  1818              ADDS     r0,r3,r0              ;169
00000a  1d24              ADDS     r4,r4,#4
00000c  191b              ADDS     r3,r3,r4
;;;171    
;;;172        *pu32EBICTL = (*pu32EBICTL & ~EBI_CTL_MCLKDIV_Msk) | (u32MclkDiv << EBI_CTL_MCLKDIV_Pos);
00000e  6804              LDR      r4,[r0,#0]
000010  2507              MOVS     r5,#7
000012  022d              LSLS     r5,r5,#8
000014  43ac              BICS     r4,r4,r5
000016  0212              LSLS     r2,r2,#8
000018  4314              ORRS     r4,r4,r2
00001a  6004              STR      r4,[r0,#0]
;;;173        *pu32EBITCTL = u32TimingConfig;
00001c  6019              STR      r1,[r3,#0]
;;;174    }
00001e  bd30              POP      {r4,r5,pc}
;;;175    
                          ENDP

                  |L3.32|
                          DCD      0x40010000

                          AREA ||i.__ARM_common_switch8||, COMGROUP=__ARM_common_switch8, CODE, READONLY, ALIGN=1

                  __ARM_common_switch8 PROC
000000  b430              PUSH     {r4,r5}
000002  4674              MOV      r4,lr
000004  1e64              SUBS     r4,r4,#1
000006  7825              LDRB     r5,[r4,#0]
000008  1c64              ADDS     r4,r4,#1
00000a  42ab              CMP      r3,r5
00000c  d200              BCS      |L25.16|
00000e  461d              MOV      r5,r3
                  |L25.16|
000010  5d63              LDRB     r3,[r4,r5]
000012  005b              LSLS     r3,r3,#1
000014  18e3              ADDS     r3,r4,r3
000016  bc30              POP      {r4,r5}
000018  4718              BX       r3
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\..\\..\\Library\\StdDriver\\src\\ebi.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_ebi_c_EBI_Open____REV16|
#line 388 "..\\..\\..\\Library\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___5_ebi_c_EBI_Open____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_ebi_c_EBI_Open____REVSH|
#line 402
|__asm___5_ebi_c_EBI_Open____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
